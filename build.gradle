buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.0.185'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

version = '2.0.0-alpha.9'
group = 'msifeed.misca'
archivesBaseName = 'misca'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
compileJava.options.encoding = compileTestJava.options.encoding = 'UTF-8'

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '--tweakClass'
            arg 'org.spongepowered.asm.launch.MixinTweaker'
            arg '--mixin'
            arg 'misca.mixins.json'
        }

        server {
            arg '--tweakClass'
            arg 'org.spongepowered.asm.launch.MixinTweaker'
            arg '--mixin'
            arg 'misca.mixins.json'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    compile 'org.spongepowered:mixin:0.8.2'
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        output.resourcesDir = file('out/production/classes')
        output.classesDir = file('out/production/classes')
    }
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'misca.mixins.json',
            'ForceLoadAsMod': 'true',
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLAT': 'accesstransformer.cfg'
    )
}

mixin {
    add sourceSets.main, "misca.refmap.json"
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

task copyLatestJar(type: Copy) {
    from jar
    into 'build/libs'
    rename { String fileName -> return archivesBaseName + '-latest.jar' }
}

build.dependsOn copyLatestJar